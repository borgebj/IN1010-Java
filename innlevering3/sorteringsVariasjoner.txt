   
      
Oblig 3:

- lage en egen LENKELISTE som generisk klasse

- (del C) klassen Stabel skal arve klassen Lenkeliste
- (del D) Klassen SortertLenkeliste skal arve Lenkeliste

"so-far"
-----------------------------------------------------
							                        |  
					 /Liste<T>/                     |
					/		                        |
		[Lenkeliste<T>]                             |
	   /			\             / Comparable<T>/  |
	  /				 \           /                  |
  [Stabel]   [SortertLenkeliste<T>]                 |
								                    |
-----------------------------------------------------

sette inn elementer p√• SLUTTEN, ta ut fra STARTEN

			  FIFO 
 <Ta ut-- [X , X , X] <Sette inn--
		   0   1   2
		   
			  LIFO
		  [X , X , X] <Sette inn- -Ta ut>
 
 
 Lenkelsite<T> - (implementere Liste<T>)
 Stabel<T> - (arve Lenkeliste<T>) 
 SorteringsLenkeliste<T> (arve Lenkeliste<T>) (T skal arve Comparable<T>)

 
   
   
   
   /* Regneoevelser-metode (kortest) */

    @Override // legger inn ny node og sorterer den inn i listen
    public void leggTil(T x) {
        int index = 0;  // variabel som holder styr paa hvor ny node skal settes

        // itererer gjennom hver node
        for (int i=0; i < stoerrelse(); i++) {

            // hvis noden er mindre enn parameter (x), okes teller node-indeks +1
            if (hent(i).compareTo(x) < 0) {
                index = i+1;
            }

            // etter iterering, legges ny node paa indeks posisjon, og dytter eventuele noder 1 plass bort
        } super.leggTil(index, x);
    }
	
	
	
	
	/* Forelesnings-metode (lenger) */
	
	@Override // legger inn ny node og sorterer den inn i listen
    public void leggTil(T x) {

        // itererer gjennom hver ode
        for (int i=0; i < stoerrelse(); i++) {

            // om noden er storre enn nyNode
            if (hent(i).compareTo(x) > 0) {

                // en tom node legges til paa slutten (skal overskrives)
                super.leggTil(null);

                // itererer bakover - starter fra noden foer null
                for (int a = stoerrelse()-2; a >= i; a--) {

                                                               // a:1 - b:3 - c:null
                    // neste node faar naa-noden sin verdi - altsaa ^: c blir b | b blir a - dytter bortover
                    super.sett(a+1, hent(a));                 //  a:1 - b:1 - c:3
                }
                // i - altsaa "duplisert" node faar ny verdi x - slutter dermed hele metoden m/ return
                super.sett(i, x);
                return;
            }
            // om iterasjonen skjer uten at if-slaar til - sett inn ny node paa sluten, fordi ny node > alle noder
        } super.leggTil(x);
    }